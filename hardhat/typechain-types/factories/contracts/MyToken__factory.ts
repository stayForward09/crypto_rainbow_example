/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyToken, MyTokenInterface } from "../../contracts/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002433380380620024338339818101604052810190620000379190620001fa565b818181600090816200004a9190620004ca565b5080600190816200005c9190620004ca565b5050505050620005b1565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000d08262000085565b810181811067ffffffffffffffff82111715620000f257620000f162000096565b5b80604052505050565b60006200010762000067565b9050620001158282620000c5565b919050565b600067ffffffffffffffff82111562000138576200013762000096565b5b620001438262000085565b9050602081019050919050565b60005b838110156200017057808201518184015260208101905062000153565b60008484015250505050565b6000620001936200018d846200011a565b620000fb565b905082815260208101848484011115620001b257620001b162000080565b5b620001bf84828562000150565b509392505050565b600082601f830112620001df57620001de6200007b565b5b8151620001f18482602086016200017c565b91505092915050565b6000806040838503121562000214576200021362000071565b5b600083015167ffffffffffffffff81111562000235576200023462000076565b5b6200024385828601620001c7565b925050602083015167ffffffffffffffff81111562000267576200026662000076565b5b6200027585828601620001c7565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002d257607f821691505b602082108103620002e857620002e76200028a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000313565b6200035e868362000313565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ab620003a56200039f8462000376565b62000380565b62000376565b9050919050565b6000819050919050565b620003c7836200038a565b620003df620003d682620003b2565b84845462000320565b825550505050565b600090565b620003f6620003e7565b62000403818484620003bc565b505050565b5b818110156200042b576200041f600082620003ec565b60018101905062000409565b5050565b601f8211156200047a576200044481620002ee565b6200044f8462000303565b810160208510156200045f578190505b620004776200046e8562000303565b83018262000408565b50505b505050565b600082821c905092915050565b60006200049f600019846008026200047f565b1980831691505092915050565b6000620004ba83836200048c565b9150826002028217905092915050565b620004d5826200027f565b67ffffffffffffffff811115620004f157620004f062000096565b5b620004fd8254620002b9565b6200050a8282856200042f565b600060209050601f8311600181146200054257600084156200052d578287015190505b620005398582620004ac565b865550620005a9565b601f1984166200055286620002ee565b60005b828110156200057c5784890151825560018201915060208501945060208101905062000555565b868310156200059c578489015162000598601f8916826200048c565b8355505b6001600288020188555050505b505050505050565b611e7280620005c16000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610282578063b88d4fde1461029e578063c87b56dd146102ba578063e985e9c5146102ea576100f5565b80636352211e146101e857806370a082311461021857806395d89b4114610248578063a0712d6814610266576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806342842e0e146101b057806342966c68146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f91906116bc565b61031a565b6040516101219190611704565b60405180910390f35b6101326103fc565b60405161013f91906117af565b60405180910390f35b610162600480360381019061015d9190611807565b61048e565b60405161016f9190611875565b60405180910390f35b610192600480360381019061018d91906118bc565b6104aa565b005b6101ae60048036038101906101a991906118fc565b6104c0565b005b6101ca60048036038101906101c591906118fc565b6105c2565b005b6101e660048036038101906101e19190611807565b6105e2565b005b61020260048036038101906101fd9190611807565b6105ee565b60405161020f9190611875565b60405180910390f35b610232600480360381019061022d919061194f565b610600565b60405161023f919061198b565b60405180910390f35b6102506106ba565b60405161025d91906117af565b60405180910390f35b610280600480360381019061027b9190611807565b61074c565b005b61029c600480360381019061029791906119d2565b610759565b005b6102b860048036038101906102b39190611b47565b61076f565b005b6102d460048036038101906102cf9190611807565b61078c565b6040516102e191906117af565b60405180910390f35b61030460048036038101906102ff9190611bca565b6107f5565b6040516103119190611704565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f557506103f482610889565b5b9050919050565b60606000805461040b90611c39565b80601f016020809104026020016040519081016040528092919081815260200182805461043790611c39565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b6000610499826108f3565b506104a38261097b565b9050919050565b6104bc82826104b76109b8565b6109c0565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105325760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105299190611875565b60405180910390fd5b600061054683836105416109b8565b6109d2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105bc578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105b393929190611c6a565b60405180910390fd5b50505050565b6105dd8383836040518060200160405280600081525061076f565b505050565b6105eb81610bec565b50565b60006105f9826108f3565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106735760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161066a9190611875565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546106c990611c39565b80601f01602080910402602001604051908101604052809291908181526020018280546106f590611c39565b80156107425780601f1061071757610100808354040283529160200191610742565b820191906000526020600020905b81548152906001019060200180831161072557829003601f168201915b5050505050905090565b6107563382610c72565b50565b61076b6107646109b8565b8383610d6b565b5050565b61077a8484846104c0565b61078684848484610eda565b50505050565b6060610797826108f3565b5060006107a2611091565b905060008151116107c257604051806020016040528060008152506107ed565b806107cc846110a8565b6040516020016107dd929190611cdd565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000806108ff83611176565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361097257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610969919061198b565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6109cd83838360016111b3565b505050565b6000806109de84611176565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a2057610a1f818486611378565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab157610a626000856000806111b3565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b34576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000610bfb60008360006109d2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c6e57816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c65919061198b565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ce45760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610cdb9190611875565b60405180910390fd5b6000610cf2838360006109d2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d665760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610d5d9190611875565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ddc57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610dd39190611875565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ecd9190611704565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561108b578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f1e6109b8565b8685856040518563ffffffff1660e01b8152600401610f409493929190611d56565b6020604051808303816000875af1925050508015610f7c57506040513d601f19601f82011682018060405250810190610f799190611db7565b60015b611000573d8060008114610fac576040519150601f19603f3d011682016040523d82523d6000602084013e610fb1565b606091505b506000815103610ff857836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fef9190611875565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461108957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110809190611875565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b6060600060016110b78461143c565b01905060008167ffffffffffffffff8111156110d6576110d5611a1c565b5b6040519080825280601f01601f1916602001820160405280156111085781602001600182028036833780820191505090505b509050600082602001820190505b60011561116b578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161115f5761115e611de4565b5b04945060008503611116575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111ec5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113205760006111fc846108f3565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561126757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561127a575061127881846107f5565b155b156112bc57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112b39190611875565b60405180910390fd5b811561131e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61138383838361158f565b61143757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113f857806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113ef919061198b565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161142e929190611e13565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061149a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114905761148f611de4565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114d7576d04ee2d6d415b85acef810000000083816114cd576114cc611de4565b5b0492506020810190505b662386f26fc10000831061150657662386f26fc1000083816114fc576114fb611de4565b5b0492506010810190505b6305f5e100831061152f576305f5e100838161152557611524611de4565b5b0492506008810190505b612710831061155457612710838161154a57611549611de4565b5b0492506004810190505b60648310611577576064838161156d5761156c611de4565b5b0492506002810190505b600a8310611586576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561164757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611608575061160784846107f5565b5b8061164657508273ffffffffffffffffffffffffffffffffffffffff1661162e8361097b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61169981611664565b81146116a457600080fd5b50565b6000813590506116b681611690565b92915050565b6000602082840312156116d2576116d161165a565b5b60006116e0848285016116a7565b91505092915050565b60008115159050919050565b6116fe816116e9565b82525050565b600060208201905061171960008301846116f5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561175957808201518184015260208101905061173e565b60008484015250505050565b6000601f19601f8301169050919050565b60006117818261171f565b61178b818561172a565b935061179b81856020860161173b565b6117a481611765565b840191505092915050565b600060208201905081810360008301526117c98184611776565b905092915050565b6000819050919050565b6117e4816117d1565b81146117ef57600080fd5b50565b600081359050611801816117db565b92915050565b60006020828403121561181d5761181c61165a565b5b600061182b848285016117f2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061185f82611834565b9050919050565b61186f81611854565b82525050565b600060208201905061188a6000830184611866565b92915050565b61189981611854565b81146118a457600080fd5b50565b6000813590506118b681611890565b92915050565b600080604083850312156118d3576118d261165a565b5b60006118e1858286016118a7565b92505060206118f2858286016117f2565b9150509250929050565b6000806000606084860312156119155761191461165a565b5b6000611923868287016118a7565b9350506020611934868287016118a7565b9250506040611945868287016117f2565b9150509250925092565b6000602082840312156119655761196461165a565b5b6000611973848285016118a7565b91505092915050565b611985816117d1565b82525050565b60006020820190506119a0600083018461197c565b92915050565b6119af816116e9565b81146119ba57600080fd5b50565b6000813590506119cc816119a6565b92915050565b600080604083850312156119e9576119e861165a565b5b60006119f7858286016118a7565b9250506020611a08858286016119bd565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a5482611765565b810181811067ffffffffffffffff82111715611a7357611a72611a1c565b5b80604052505050565b6000611a86611650565b9050611a928282611a4b565b919050565b600067ffffffffffffffff821115611ab257611ab1611a1c565b5b611abb82611765565b9050602081019050919050565b82818337600083830152505050565b6000611aea611ae584611a97565b611a7c565b905082815260208101848484011115611b0657611b05611a17565b5b611b11848285611ac8565b509392505050565b600082601f830112611b2e57611b2d611a12565b5b8135611b3e848260208601611ad7565b91505092915050565b60008060008060808587031215611b6157611b6061165a565b5b6000611b6f878288016118a7565b9450506020611b80878288016118a7565b9350506040611b91878288016117f2565b925050606085013567ffffffffffffffff811115611bb257611bb161165f565b5b611bbe87828801611b19565b91505092959194509250565b60008060408385031215611be157611be061165a565b5b6000611bef858286016118a7565b9250506020611c00858286016118a7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c5157607f821691505b602082108103611c6457611c63611c0a565b5b50919050565b6000606082019050611c7f6000830186611866565b611c8c602083018561197c565b611c996040830184611866565b949350505050565b600081905092915050565b6000611cb78261171f565b611cc18185611ca1565b9350611cd181856020860161173b565b80840191505092915050565b6000611ce98285611cac565b9150611cf58284611cac565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611d2882611d01565b611d328185611d0c565b9350611d4281856020860161173b565b611d4b81611765565b840191505092915050565b6000608082019050611d6b6000830187611866565b611d786020830186611866565b611d85604083018561197c565b8181036060830152611d978184611d1d565b905095945050505050565b600081519050611db181611690565b92915050565b600060208284031215611dcd57611dcc61165a565b5b6000611ddb84828501611da2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050611e286000830185611866565b611e35602083018461197c565b939250505056fea2646970667358221220d8be051c24b939fa72005f09b7072e36c7e627d259db2801e5798f6c049c226e64736f6c63430008140033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, symbol, overrides || {});
  }
  override deploy(
    _name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, symbol, overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
